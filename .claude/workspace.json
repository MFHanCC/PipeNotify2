{
  "workspace": {
    "structure": {
      "root": "/Users/mehmetbozkurt/Desktop/projects/Pipenotify2",
      "key_directories": {
        "backend": {
          "path": "./backend",
          "type": "nodejs_service",
          "entry_point": "server.js",
          "package_manager": "npm",
          "important_files": [
            "server.js",
            "package.json",
            "railway.toml"
          ],
          "subdirectories": {
            "routes": "api_endpoints",
            "services": "business_logic",
            "middleware": "request_processing",
            "jobs": "background_processing",
            "db": "database_schema_migrations",
            "tests": "unit_integration_tests"
          }
        },
        "frontend": {
          "path": "./frontend",
          "type": "react_spa",
          "entry_point": "src/index.tsx",
          "package_manager": "npm",
          "important_files": [
            "package.json",
            "tsconfig.json",
            "vercel.json"
          ],
          "subdirectories": {
            "src/components": "reusable_ui_components",
            "src/features": "feature_specific_code",
            "src/services": "api_communication",
            "src/layouts": "page_layouts",
            "public": "static_assets"
          }
        },
        "monitoring": {
          "path": "./monitoring",
          "type": "monitoring_tools",
          "purpose": "health_checks_browser_tests",
          "important_files": [
            "browser-tests.js",
            "error-aggregator.js",
            "dashboard.html"
          ]
        },
        "docs": {
          "path": "./docs",
          "type": "project_documentation",
          "subdirectories": {
            "architecture": "technical_documentation",
            "development": "implementation_guides"
          }
        },
        "scripts": {
          "path": "./scripts",
          "type": "automation_utilities",
          "purpose": "deployment_testing_maintenance"
        },
        "logs": {
          "path": "./logs",
          "type": "monitoring_data",
          "retention": "30_days",
          "subdirectories": {
            "browser": "browser_test_screenshots",
            "railway": "backend_service_logs",
            "vercel": "frontend_deployment_logs",
            "claude-alerts": "automated_monitoring_alerts"
          }
        }
      }
    },
    "important_files": {
      "configuration": [
        "CLAUDE.md",
        ".claude/settings.json",
        ".claude/monitoring.json",
        ".claude/browser-config.json",
        "backend/railway.toml",
        "frontend/vercel.json"
      ],
      "deployment": [
        "DEPLOYMENT.md",
        "DEPLOYMENT_CHECKLIST.md",
        "scripts/test-deployment.sh",
        "scripts/validate-deployment.sh"
      ],
      "database": [
        "backend/db/schema.sql",
        "backend/migrations/*.sql"
      ],
      "documentation": [
        "project_requirements_document.md",
        "docs/architecture/*.md",
        "docs/development/*.md"
      ]
    },
    "ignore_patterns": [
      "node_modules/**",
      "build/**",
      "dist/**",
      ".env*",
      "*.log",
      ".DS_Store",
      "coverage/**",
      "*.tmp",
      "*.bak*"
    ],
    "file_conventions": {
      "naming": {
        "components": "PascalCase.tsx",
        "services": "camelCase.js",
        "routes": "kebab-case.js",
        "configs": "kebab-case.json",
        "scripts": "kebab-case.sh"
      },
      "organization": {
        "tests": "co-located with source or tests/ directory",
        "types": "inline or types/ directory",
        "constants": "constants/ or inline",
        "utilities": "utils/ or services/"
      }
    }
  },
  "development_environment": {
    "required_tools": [
      "nodejs_18+",
      "npm",
      "git",
      "railway_cli",
      "vercel_cli",
      "postgresql_client"
    ],
    "optional_tools": [
      "github_cli",
      "docker",
      "redis_cli"
    ],
    "environment_files": {
      "backend": ".env (railway auto-injected)",
      "frontend": ".env.local (vercel auto-injected)",
      "local": ".env.example templates available"
    },
    "ports": {
      "backend_dev": 3001,
      "frontend_dev": 3000,
      "postgres_local": 5432,
      "redis_local": 6379
    }
  },
  "common_commands": {
    "development": {
      "start_backend": "cd backend && npm start",
      "start_frontend": "cd frontend && npm start",
      "run_tests": "cd backend && npm test",
      "build_frontend": "cd frontend && npm run build"
    },
    "deployment": {
      "deploy_backend": "git push origin main",
      "deploy_frontend": "vercel --prod",
      "run_migrations": "./backend/db/migrate.sh",
      "validate_deployment": "./scripts/validate-deployment.sh"
    },
    "monitoring": {
      "check_health": "curl https://pipenotify.up.railway.app/health",
      "view_logs": "railway logs",
      "run_browser_tests": "cd monitoring && npm test",
      "view_dashboard": "open monitoring/dashboard.html"
    },
    "maintenance": {
      "backup_db": "railway pg dump > backup.sql",
      "clear_logs": "find ./logs -type f -mtime +30 -delete",
      "update_deps": "npm update && cd frontend && npm update"
    }
  }
}